; The e256 eTextile-matrix-sensor is used as eTextile-midi-interface: NO BUILTIN SYNTHESIZER!
; Insted we get an easily configurable builtin touch-user-interface TUI
; The configuration file contaning MIDI mappings is generated by a custom web app
; The generated file can be saved to local folder & uploded to the flash memory

;-D MAPPING_LAYER

[platformio]
;default_envs = USB_MIDI       ; Used in production
default_envs = USB_MIDI_SERIAL ; Used in dev mode

[env]
platform = teensy
framework = arduino
board = teensy40
board_build.f_cpu = 600000000L
monitor_port = /dev/ttyACM0
monitor_speed = 230400

[common]
lib_deps =
  bblanchon/ArduinoJson@^6.19.4

build_flags =
  -D TEENSY_OPT_FASTEST
  
  ;-D GRID_LAYOUT_DEFAULT    ; The MIDI notes are organized sequentially from 0 to 127 % GRID COLS
  -D GRID_LAYOUT_HARMONIC    ; The MIDI notes are organized in 2D Harmonic table note layout
  ;-D GRID_LAYOUT_MIDI_IN    ; Use the MIDI_HARDWARE_INPUT notes to populate the TUI-grid

[env:USB_MIDI]
build_flags =
  -D USB_MIDI                ; Set the eTextile-Synthesizer as USB_MIDI divice
  ${common.build_flags}

[env:USB_MIDI_SERIAL]
build_flags =
  -D USB_MIDI_SERIAL         ; Set the eTextile-Synthesizer as USB_MIDI_SERIAL divice
  ${common.build_flags}

  ;-D VELOCITY               ; IN_PROGRESS
  ;-D RUNING_MEDIAN          ; IN_PROGRESS

  ;-D DEBUG_FPS              ; Print Frames Per Second
  ;-D DEBUG_ENCODER          ; Print encoder value
  ;-D DEBUG_BUTTONS          ; Print buttons states
    
  ;-D DEBUG_MODES            ;    
  ;-D DEBUG_STATES           ;
  ;-D DEBUG_LEVELS           ;

  ;-D DEBUG_ADC              ; Print 16x16 Analog raw values
  ;-D DEBUG_INTERP           ; Print 64x64 interpolated values
  ;-D DEBUG_BITMAP           ; Print 64x64 binary image based on threshold
  ;-D DEBUG_FIND_BLOBS       ; Print lowlevel blobs values
  ;-D DEBUG_BLOBS            ; Print blobs values
  ;-D DEBUG_MAPPING          ; Print GUI values
  ;-D DEBUG_MIDI_IO          ;
  -D DEBUG_CONFIG            ;
